{"version":3,"sources":["Components/Contacts/Contacts.module.css","Components/app.module.css","redux/contacts-actions.js","Components/ContactForm/ContactForm.jsx","Components/Contacts/Contacts.jsx","Components/App.jsx","redux/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","removeContact","createAction","createContact","data","payload","id","uuidv4","name","number","setFilter","connect","state","contacts","items","dispatch","actions","useState","setName","setNumber","className","s","interface","onSubmit","e","preventDefault","obj","dataUser","res","filter","item","isValid","length","alert","validate","document","getElementById","value","form","type","onChange","target","pattern","title","required","inputTel","buttonAdd","filterName","map","includes","li","onClick","button","App","section","contactsReducer","createReducer","action","contact","filterReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render"],"mappings":"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","file":"static/js/main.476fa6d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contacts_li__uTM6u\",\"button\":\"Contacts_button__1E_Av\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"app_section__252Z4\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst removeContact = createAction(\"contacts/RemoveContact\");\r\nconst createContact = createAction(\"contacts/createContact\", (data) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n}));\r\nconst setFilter = createAction(\"contacts/SetFilter\");\r\n\r\nexport default {\r\n  removeContact,\r\n  createContact,\r\n  setFilter,\r\n};\r\n","import React, { useState } from 'react'\r\nimport s from './ContactForm.module.css';\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../redux/contacts-actions';\r\n\r\nfunction ContactForm({ contacts, createContact }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n\r\n    const handleChangephnone = e => {\r\n        const value = e.target.value;\r\n        setNumber(value);\r\n\r\n\r\n    }\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setName(value);\r\n    }\r\n\r\n    const validate = (dataUser) => {\r\n        const res = contacts.filter(item => (\r\n            item.name === dataUser.name\r\n        ))\r\n\r\n        let isValid = true;\r\n        const notValid = () => {\r\n            isValid = false;\r\n        };\r\n\r\n        res.length > 0 && alert(`Eror, ${dataUser.name} is already in contacts`)\r\n        res.length > 0 && notValid()\r\n        return (isValid);\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const obj = {\r\n            name: name,\r\n            number: number,\r\n            \r\n        }\r\n        \r\n        \r\n\r\n            validate(obj) && createContact(obj)\r\n            \r\n        \r\n            setName('');\r\n            setNumber('');\r\n            document.getElementById('name').value = '';\r\n            document.getElementById('number').value = '';\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={s.interface}>\r\n\r\n            <form onSubmit={handleSubmit} className={s.form}>\r\n                <div>\r\n                    <label>\r\n                        <p>Name</p>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                            id=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                        />\r\n                    </label>\r\n\r\n                    <label>\r\n                        Phone\r\n                        <input\r\n                            className={s.inputTel}\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            onChange={handleChangephnone}\r\n                            id=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className={s.buttonAdd}>Add contact</button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contacts: state.contacts.items,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createContact: (data) => dispatch(actions.createContact(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import s from './Contacts.module.css';\r\nimport React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../redux/contacts-actions';\r\n\r\n\r\n\r\nconst Contacts = ({ contacts, setFilter, removeContact, filterName }) => {\r\n\r\n    const filter = e => {\r\n        const value = e.target.value;\r\n        setFilter(value);\r\n    };\r\n    return (\r\n        <div>\r\n            <h2>Contacts</h2>\r\n            <input type=\"text\" onChange={filter} />\r\n\r\n            <ul>\r\n                {contacts.map(item => (  \r\n                    item.name.includes(filterName) ? <li key={item.id} className={s.li}> {item.name}: {item.number} <button type=\"button\" id={item.id} onClick={() => removeContact(item.id)} className={s.button}>Delete</button> </li> : false\r\n                ))}\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contacts: state.contacts.items,\r\n        filterName: state.contacts.filter,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeContact: (id) => dispatch(actions.removeContact(id)),\r\n        setFilter: (value) => dispatch(actions.setFilter(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React, { useState, useEffect } from 'react'\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport Contacts from './Contacts/Contacts';\r\nimport s from '../Components/app.module.css';\r\n\r\n\r\nfunction App() {\r\n    \r\n    return (\r\n        <div className={s.section}>\r\n            <h1>PhoneBook</h1>\r\n\r\n            <ContactForm />\r\n            <Contacts />\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contacts-actions\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst initialContactsState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst contactsReducer = createReducer(initialContactsState, {\r\n  [actions.createContact]: (state, action) => [...state, action.payload],\r\n  [actions.removeContact]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.setFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./contacts-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: reducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App /> \n    </Provider>\n    \n    \n    ,\n    document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"interface\":\"ContactForm_interface__1YgWX\",\"form\":\"ContactForm_form__3kE82\",\"inputTel\":\"ContactForm_inputTel__4OdN2\",\"buttonAdd\":\"ContactForm_buttonAdd__26bUe\"};"],"sourceRoot":""}